plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'com.google.cloud.tools.jib' version '3.3.2'
}

group = 'com.mediasoft'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:3.4.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.4.1'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    annotationProcessor "org.projectlombok:lombok:1.18.36"
    compileOnly 'org.projectlombok:lombok:1.18.36'
    implementation 'org.flywaydb:flyway-core:11.2.0'
    runtimeOnly 'org.flywaydb:flyway-database-postgresql:11.2.0'
    implementation 'org.postgresql:postgresql:42.7.5'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.4.1'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.3'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.4.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.4.1'
    testImplementation 'org.mockito:mockito-core:5.15.2'



}

tasks.withType(Test).configureEach {
    jvmArgs += ["-XX:+EnableDynamicAgentLoading"]
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
        showStandardStreams = true
    }
}

test {
    useJUnitPlatform()
}

jib {
    from {
        image = 'eclipse-temurin:21-jre'
    }
    to {
        image = "product-ms:$version"
    }
    container {
        ports = ['8001']
        mainClass = 'com.mediasoft.Main'
    }
}
